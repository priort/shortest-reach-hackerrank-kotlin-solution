package com.prigrammer.hackerrank.kotlin

import org.junit.Assert.assertArrayEquals
import org.junit.Assert.assertEquals
import org.junit.Test
import priort.hackerrank.kotlin.Edge
import priort.hackerrank.kotlin.bfs
import priort.hackerrank.kotlin.toGraph
import java.io.BufferedReader
import java.io.File
import kotlin.random.Random

class ShortestReachTest {

    @Test
    fun `shortestReach should return array of shortest path from start to every other node`() {
        val result = bfs(4, 2, arrayOf(arrayOf(1, 2), arrayOf(1, 3)), 1)
        assertArrayEquals(arrayOf(6, 6, -1), result)
    }

    @Test
    fun `shortestReach performance test`() {
        val numNodes = 446
        val numEdges = 303389
        val edges = (1 .. numEdges).map { arrayOf(Random.nextInt(1, 447), Random.nextInt(1, 447)) }.toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 6)
        val r = result

    }

    @Test
    fun `shortestReach performance test2`() {
        val numNodes = 446
        val numEdges = 30338
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 274)
        assertArrayEquals(
            arrayOf(12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12), result
        )
//        val r = result

    }

    @Test
    fun `shortestReach performance test3`() {
        val numNodes = 678
        val numEdges = 46996
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach2.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 588)
        assertArrayEquals(
            arrayOf(6,
                6,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                6,
                12,
                6,
                12,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                6,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                12,
                12,
                6,
                6,
                6,
                6,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                6,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                6),
            result)
//        val r = result

    }


    @Test
    fun `shortestReach performance test4`() {
        val numNodes = 779
        val numEdges = 89860
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach3.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 196)
        assertArrayEquals(
            arrayOf(6,
                12,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                6,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                6,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                6,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1,
                12,
                -1,
                -1,
                -1),
            result)
//        val r = result

    }

    @Test
    fun `shortestReach performance test5`() {
        val numNodes = 524
        val numEdges = 18428
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach4.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 174)
        assertArrayEquals(
            arrayOf(
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
            ),
            result)
//        val r = result

    }

    @Test
    fun `shortestReach performance test6`() {
        val numNodes = 946
        val numEdges = 60587
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach5.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 464)
        assertArrayEquals(
            arrayOf(12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                6,
                6,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                6,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12),
            result)
//        val r = result

    }

    @Test
    fun `shortestReach performance test7`() {
        val numNodes = 30
        val numEdges = 1
        val edges =

            File(this.javaClass.classLoader.getResource("sampleBigShortestReach6.txt").file)
                .readLines()
                .drop(1)
                .map { it.split(" ").map(String::toInt).toTypedArray() }
                .toTypedArray()
        val result = bfs(numNodes, numEdges, edges, 8)
        assertArrayEquals(
            arrayOf(-1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1),
            result)
//        val r = result

    }


    @Test
    fun `toGraph represents an array of Edges as a map of each start node to its end nodes bi-directionally`() {
        val edges = listOf(
            Edge(1, 2),
            Edge(1, 4),
            Edge(2, 3),
            Edge(3, 1),
            Edge(3, 4)
        )
        val expectedGraph = mapOf(
            1 to setOf(2, 4, 3),
            2 to setOf(1, 3),
            3 to setOf(1, 4, 2),
            4 to setOf(1, 3)
        )

        assertEquals(expectedGraph, edges.toGraph())
    }
}